@namespace ToSic.Cre8magic.Theme.Basic
@using static ToSic.Cre8magic.Theme.Basic.Constants
@inherits ModuleBase
@implements Oqtane.Interfaces.ISettingsControl
@inject ISettingService SettingService
@inject IStringLocalizer<ThemeSettings> Localizer
@inject IStringLocalizer<SharedResources> SharedLocalizer
@attribute [OqtaneIgnore]

    <div class="container">
        <div class="row mb-1 align-items-center">
            <Label Class="col-sm-3" For="scope" ResourceKey="Scope" ResourceType="@_resourceType" HelpText="Specify if the settings are applicable to this page or the entire site.">Setting Scope:</Label>
            <div class="col-sm-9">
                <select id="scope" class="form-select" value="@_scope" @onchange="(ScopeChanged)">
                @if (UserSecurity.IsAuthorized(PageState.User, RoleNames.Admin))
                {
                    <option value="site">@Localizer["Site"]</option>
                }
                <option value="page">@Localizer["Page"]</option>
            </select>
        </div>
    </div>
    <div class="row mb-1 align-items-center">
        <Label Class="col-sm-3" For="login" ResourceKey="Login" ResourceType="@_resourceType" HelpText="Specify if a Login option should be displayed. Note that this option does not prevent the login page from being accessible via a direct url.">Show Login?</Label>
        <div class="col-sm-9">
            <select id="login" class="form-select" @bind="@_login">
                <option value="">&lt;@SharedLocalizer["Not Specified"]&gt;</option>
                <option value="true">@SharedLocalizer["Yes"]</option>
                <option value="false">@SharedLocalizer["No"]</option>
            </select>
            @if (_scope != "site")
            {
                <div class="small text-muted">Site: @_loginMerge</div>
            }
        </div>
    </div>
    <div class="row mb-1 align-items-center">
        <Label Class="col-sm-3" For="register" ResourceKey="Register" ResourceType="@_resourceType" HelpText="Specify if a Register option should be displayed. Note that this option is also dependent on the Allow Registration option in Site Settings.">Show Register?</Label>
        <div class="col-sm-9">
            <select id="register" class="form-select" @bind="@_register">
                <option value="">&lt;@SharedLocalizer["Not Specified"]&gt;</option>
                <option value="true">@SharedLocalizer["Yes"]</option>
                <option value="false">@SharedLocalizer["No"]</option>
            </select>
            @if (_scope != "site")
            {
                <div class="small text-muted">Site: @_registerMerge</div>
            }
        </div>
    </div>

    <div class="accordion mb-3" id="footerHtmlAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingFooterHtml">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFooterHtml" aria-expanded="false" aria-controls="collapseFooterHtml">
                    @SharedLocalizer["Footer HTML"]
                </button>
            </h2>
            <div id="collapseFooterHtml" class="accordion-collapse collapse" aria-labelledby="headingFooterHtml" data-bs-parent="#footerHtmlAccordion">
                <div class="accordion-body">
                    <div class="row mb-1 align-items-center">
                        <div class="col-sm-3">
                            <Label  For="footerHtml" ResourceKey="FooterHtml" ResourceType="@_resourceType" HelpText="Here you can insert your own HTML code for the footer">Footer HTML:</Label>
                            <button type="button" class="btn btn-secondary ms-2" @onclick="() => _footerHtml = DefaultFooterHtml">
                                @SharedLocalizer["Show Default"]
                            </button>
                        </div>
                        <div class="col-sm-9">
                            <textarea id="footerHtml" class="form-control" @bind="_footerHtml" rows="4"></textarea>
                            @if (_scope != "site")
                            {
                                <div class="small text-muted">
                                    Site:
                                    <pre>@_footerHtmlMerge</pre>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="accordion mb-3" id="themeColorAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingThemeColor">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThemeColor" aria-expanded="false" aria-controls="collapseThemeColor">
                    @SharedLocalizer["Theme Css"]
                </button>
            </h2>
            <div id="collapseThemeColor" class="accordion-collapse collapse" aria-labelledby="headingThemeColor" data-bs-parent="#themeColorAccordion">
                <div class="accordion-body">
                    <div class="row mb-1 align-items-center">
                        <Label class="col-sm-3" For="themeCss" ResourceKey="ThemeCss" ResourceType="@_resourceType" HelpText="Here you can insert your own Theme CSS.">Theme Color:</Label>
                        <div class="col-sm-9">
                            <textarea id="themeCss" class="form-control" @bind="_themeCss" rows="2"></textarea>
                            @if (_scope != "site")
                            {
                                <div class="small text-muted">
                                    Site:
                                    <pre>@_themeCssMerge</pre>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@code {
    private int _pageId = -1;
    private readonly string _resourceType = ThemeInfo.Static.ThemeSettingsType;
    private string _scope = "page";
    private string _login = "";
    private string _register = "";
    private string _footerHtml = "";
    private string _themeCss = "";

    private string _loginMerge = "";
    private string _registerMerge = "";
    private string _footerHtmlMerge = "";
    private string _themeCssMerge = "";


    protected override async Task OnInitializedAsync()
    {
        if (PageState.QueryString.TryGetValue("id", out var idString))
            _pageId = int.Parse(idString);

        try
        {
            await LoadSettings();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Settings {Error}", ex.Message);
            AddModuleMessage("Error Loading Settings", MessageType.Error);
        }
    }

    private async Task LoadSettings()
    {
        var forPage = _scope == "page";

        var helper = new SettingsHelper(SettingService, PageState.Site.SiteId, _pageId);
        var reader = forPage ? await helper.Page() : await helper.Site();
        _login = reader.Get(KeyLogin);
        _register = reader.Get(KeyRegister);
        _footerHtml = reader.Get(KeyFooterHtml);
        _themeCss = reader.Get(KeyThemeCss);

        if (_scope == "page")
        {
            var mergedReader = await helper.Merged();
            _loginMerge = mergedReader.Get(KeyLogin);
            _registerMerge = mergedReader.Get(KeyRegister);
            _footerHtmlMerge = mergedReader.Get(KeyFooterHtml);
            _themeCssMerge = mergedReader.Get(KeyThemeCss);
        }
        await Task.Yield();
    }

    private async Task ScopeChanged(ChangeEventArgs eventArgs)
    {
        try
        {
            _scope = (string)eventArgs.Value;
            await LoadSettings();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Settings {Error}", ex.Message);
            AddModuleMessage("Error Loading Settings", MessageType.Error);
        }
    }

    public async Task UpdateSettings()
    {
        try
        {
            var forSite = _scope == "site";
            var saver = new SettingsSaver(SettingService, forSite ? "Site" : "Page", forSite ? PageState.Site.SiteId : _pageId);
            await saver.Save(new()
            {
                [KeyLogin] = _login,
                [KeyRegister] = _register,
                [KeyFooterHtml] = _footerHtml,
                [KeyThemeCss] = _themeCss
            });

        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Saving Settings {Error}", ex.Message);
            AddModuleMessage("Error Saving Settings", MessageType.Error);
        }
    }
}
